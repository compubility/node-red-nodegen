name: Publish Package to Registry

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Optional. Version to publish (e.g., 1.2.3). Defaults to current package.json version.'
        required: false
        default: ''
  push:
    # Trigger on version tags like v1.0.0
    tags:
      - 'v*.*.*'

jobs:
  publish:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine release version
        id: version-vars
        env:
          EVENT_NAME: ${{ github.event_name }}
          INPUT_VERSION: ${{ github.event.inputs.version }}
        run: |
          if [ "$EVENT_NAME" = "workflow_dispatch" ]; then
            if [ -n "$INPUT_VERSION" ]; then
              VERSION="$INPUT_VERSION"
            else
              VERSION=$(node -pe "require('./package.json').version")
            fi
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo "Determined version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Sync package.json version with determined version
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REF_NAME: ${{ github.ref_name }}
          VERSION: ${{ steps.version-vars.outputs.version }}
        run: |
          current=$(node -pe "require('./package.json').version")
          if [ "$current" != "$VERSION" ]; then
            echo "Bumping package.json from $current to $VERSION"
            npm version "$VERSION" --no-git-tag-version
            git config user.name "${{ github.actor }}"
            git config user.email "${{ github.actor }}@users.noreply.github.com"
            git add package.json
            git commit -m "chore(release): bump to $VERSION"
            git push origin HEAD:$REF_NAME
          else
            echo "package.json already at version $VERSION; skipping bump."
          fi


      - name: Authenticate to npmjs
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc


      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Copy templates
        run: node dist/scripts/copy-templates.js

      - name: Publish to GitHub Packages
        run: npm publish --access public --registry https://npm.pkg.github.com
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
